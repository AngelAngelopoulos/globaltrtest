using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;

namespace weatherservice.Models
{
    /// <summary>
    /// Represents a weather response stored in MongoDB.
    /// </summary>
    public class WeatherResponse
    {
        /// <summary>
        /// Gets or sets the unique identifier for the weather response.
        /// This is automatically generated by MongoDB.
        /// </summary>
        [BsonId]
        [BsonRepresentation(BsonType.ObjectId)]
        private string? id;

        /// <summary>
        /// Gets or sets the latitude of the location.
        /// </summary>
        private float? latitude;

        /// <summary>
        /// Gets or sets the longitude of the location.
        /// </summary>
        private float? longitude;

        /// <summary>
        /// Gets or sets the name of the city associated with the weather response.
        /// </summary>
        private string? city;

        /// <summary>
        /// Gets or sets the temperature at the location in degrees Celsius.
        /// </summary>
        private float? temperature;

        /// <summary>
        /// Gets or sets the wind direction at the location in degrees.
        /// </summary>
        private int? windDirection;

        /// <summary>
        /// Gets or sets the wind speed at the location in meters per second.
        /// </summary>
        private float? windSpeed;

        /// <summary>
        /// Gets or sets the sunrise date and time for the location.
        /// </summary>
        private DateTime? sunriseDateTime;

        /// <summary>
        /// Gets or sets the timestamp when the weather response was created or updated.
        /// </summary>
        private DateTime timestamp;

        /// <summary>
        /// Gets or sets the temperature at the location in degrees Celsius.
        /// </summary>
        public float? Temperature { get => temperature; set => temperature = value; }

        /// <summary>
        /// Gets or sets the wind direction at the location in degrees.
        /// </summary>
        public int? WindDirection { get => windDirection; set => windDirection = value; }

        /// <summary>
        /// Gets or sets the wind speed at the location in meters per second.
        /// </summary>
        public float? WindSpeed { get => windSpeed; set => windSpeed = value; }

        /// <summary>
        /// Gets or sets the sunrise date and time for the location.
        /// </summary>
        public DateTime? SunriseDateTime { get => sunriseDateTime; set => sunriseDateTime = value; }

        /// <summary>
        /// Gets or sets the latitude of the location.
        /// </summary>
        public float? Latitude { get => latitude; set => latitude = value; }

        /// <summary>
        /// Gets or sets the longitude of the location.
        /// </summary>
        public float? Longitude { get => longitude; set => longitude = value; }

        /// <summary>
        /// Gets or sets the timestamp when the weather response was created or updated.
        /// </summary>
        public DateTime Timestamp { get => timestamp; set => timestamp = value; }

        /// <summary>
        /// Gets or sets the unique identifier for the weather response.
        /// This is automatically generated by MongoDB.
        /// </summary>
        public string? Id { get => id; set => id = value; }

        /// <summary>
        /// Gets or sets the name of the city associated with the weather response.
        /// </summary>
        public string? City { get => city; set => city = value; }
    }
}
